name: test
on: [push, pull_request]
jobs:
  unit:
    strategy:
      matrix:
        go-version:
          - 1.x
        platform:
          - ubuntu-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use cache
        id: cache-go-mod
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download modules
        if: steps.cache-go-mod.outputs.cache-hit != 'true'
        run: go mod download
      - name: Run unit tests
        run: go test -v -covermode=atomic
  e2e:
    strategy:
      matrix:
        go-version:
          - 1.x
        platform:
          - ubuntu-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install gauge
        run: npm install -g @getgauge/cli
      - name: Download Gems
        run: cd e2e && bundle install
      - name: Run e2e tests
        run: make e2e
